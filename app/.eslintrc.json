{
  "parser": "vue-eslint-parser",
  "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:import/errors",
      "plugin:import/warnings",
      "plugin:vue/recommended",
      "plugin:jest/recommended"
  ],
  "plugins": [
      "@typescript-eslint",
      "jsdoc",
      "import",
      "jest"
  ],
  "env": {
      "es6": true,
      "browser": true,
      "node": true,
      "jest/globals": true
  },
  "parserOptions": {
      "parser": "@typescript-eslint/parser",
      "ecmaFeatures": {
          "jsx": true
      }
  },
  "rules": {
      "@typescript-eslint/adjacent-overload-signatures": "warn",
      "@typescript-eslint/array-type": [
          "warn",
          {
              "default": "array"
          }
      ],
      "@typescript-eslint/ban-types": [
          "warn",
          {
              "types": {
                  "Boolean": "Avoid using the `Boolean` type. Did you mean `boolean`?",
                  "Function": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`.",
                  "Number": "Avoid using the `Number` type. Did you mean `number`?",
                  "Object": "Avoid using the `Object` type. Did you mean `object`?",
                  "String": "Avoid using the `String` type. Did you mean `string`?",
                  "Symbol": "Avoid using the `Symbol` type. Did you mean `symbol`?"
              }
          }
      ],
      "@typescript-eslint/consistent-type-assertions": [
          "warn",
          {
              "assertionStyle": "as",
              "objectLiteralTypeAssertions": "never"
          }
      ],
      "@typescript-eslint/consistent-type-imports": [
          "warn",
          {
              "prefer": "type-imports"
          }
      ],
      "@typescript-eslint/explicit-function-return-type": "off",
      "@typescript-eslint/explicit-member-accessibility": [
          "warn",
          {
              "accessibility": "explicit",
              "overrides": {
                  "accessors": "explicit",
                  "constructors": "no-public",
                  "methods": "explicit",
                  "parameterProperties": "off",
                  "properties": "explicit"
              }
          }
      ],
      "@typescript-eslint/indent": [
          "warn",
          4,
          {
              "SwitchCase": 1
          }
      ],
      "@typescript-eslint/member-delimiter-style": [
          "warn",
          {
              "multiline": {
                  "delimiter": "semi",
                  "requireLast": true
              },
              "overrides": {
                  "typeLiteral": {
                      "multiline": {
                          "delimiter": "comma",
                          "requireLast": false
                      }
                  }
              },
              "singleline": {
                  "delimiter": "comma",
                  "requireLast": false
              }
          }
      ],
      "@typescript-eslint/member-ordering": [
          "warn",
          {
              "default": [
                  "public-instance-method",
                  "public-static-field"
              ]
          }
      ],
      "@typescript-eslint/no-empty-interface": "off",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/no-inferrable-types": "off",
      "@typescript-eslint/no-misused-new": "warn",
      "@typescript-eslint/no-namespace": "warn",
      "@typescript-eslint/no-object-literal-type-assertion": "off",
      "@typescript-eslint/no-parameter-properties": "warn",
      "@typescript-eslint/no-unused-expressions": "warn",
      "@typescript-eslint/no-use-before-define": "off",
      "@typescript-eslint/no-var-requires": "warn",
      "@typescript-eslint/prefer-for-of": "warn",
      "@typescript-eslint/prefer-function-type": "warn",
      "@typescript-eslint/prefer-interface": "off",
      "@typescript-eslint/triple-slash-reference": "warn",
      "@typescript-eslint/type-annotation-spacing": [
          "warn",
          {
              "after": true,
              "before": false,
              "overrides": {
                  "arrow": {
                      "after": true,
                      "before": true
                  }
              }
          }
      ],
      "@typescript-eslint/unified-signatures": "warn",
      "arrow-parens": "off",
      "arrow-spacing": "warn",
      "comma-dangle": "off",
      "complexity": "off",
      "constructor-super": "warn",
      "curly": "warn",
      "dot-notation": "warn",
      "eol-last": "warn",
      "import/named": "off",
      "import/namespace": "off",
      "import/no-default-export": "off",
      "import/no-duplicates": "off",
      "import/no-internal-modules": "off",
      "import/no-unresolved": "off",
      "import/no-self-import": "warn",
      "import/order": [
          "warn",
          {
              "newlines-between": "always",
              "pathGroups": [
                  {
                      "pattern": "@common/**",
                      "group": "external",
                      "position": "after"
                  }
              ],
              "pathGroupsExcludedImportTypes": ["builtin"]
          }
      ],
      "jest/expect-expect": "warn",
      "jsdoc/check-alignment": 1,
      "jsdoc/check-examples": 1,
      "jsdoc/check-indentation": 1,
      "jsdoc/check-param-names": 1,
      "jsdoc/check-syntax": 1,
      "jsdoc/check-tag-names": 1,
      "jsdoc/check-types": 1,
      "jsdoc/require-param": 1,
      "jsdoc/require-returns": 1,
      "jsdoc/require-returns-type": 1,
      "jsdoc/valid-types": 1,
      "key-spacing": [
          "warn",
          {
              "afterColon": true,
              "beforeColon": false,
              "mode": "strict"
          }
      ],
      "keyword-spacing": [
          "warn",
          {
              "before": true
          }
      ],
      "max-classes-per-file": [
          "warn",
          1
      ],
      "max-lines": ["warn", 500],
      "new-parens": "warn",
      "no-bitwise": "warn",
      "no-caller": "warn",
      "no-case-declarations": "off",
      "no-cond-assign": "warn",
      "no-debugger": "warn",
      "no-dupe-class-members": "off",
      "no-empty": "warn",
      "no-eval": "warn",
      "no-fallthrough": "off",
      "no-invalid-this": "off",
      "no-labels": "warn",
      "no-multiple-empty-lines": [
          "warn",
          {
              "max": 1,
              "maxEOF": 1,
              "maxBOF": 0
          }
      ],
      "no-new-wrappers": "warn",
      "no-parameter-properties": "off",
      "@typescript-eslint/no-redeclare": "warn",
      "no-return-await": "warn",
      "no-require-imports": "off",
      "no-shadow": "off",
      "@typescript-eslint/no-shadow": ["warn"],
      "no-throw-literal": "warn",
      "no-trailing-spaces": "warn",
      "no-undef-init": "warn",
      "no-unexpected-multiline": "off",
      "no-unsafe-finally": "warn",
      "no-unused-labels": "warn",
      "no-use-before-define": "off",
      "no-var": "warn",
      "object-curly-spacing": [
          "warn",
          "always"
      ],
      "object-shorthand": "warn",
      "one-var": [
          "warn",
          {
              "const": "never",
              "let": "never",
              "var": "never"
          }
      ],
      "prefer-arrow-callback": [
          "warn",
          {
              "allowNamedFunctions": true
          }
      ],
      "prefer-const": "warn",
      "quote-props": [
          "warn",
          "consistent-as-needed"
      ],
      "quotes": [
          "warn",
          "double",
          {
              "avoidEscape": true
          }
      ],
      "radix": "warn",
      "semi": [
          "warn",
          "always"
      ],
      "sort-imports": "off",
      "sort-keys": "off",
      "space-before-blocks": "warn",
      "space-before-function-paren": [
          "warn",
          {
              "anonymous": "never",
              "asyncArrow": "always",
              "named": "never"
          }
      ],
      "spaced-comment": [
          2,
          "always"
      ],
      "use-isnan": "warn",
      "vue/html-indent": ["warn", 4],

      "no-unused-vars": "off",
      "@typescript-eslint/no-unused-vars": [
          "warn",
          {
              "ignoreRestSiblings": true
          }
      ],
      "max-len": [
          "warn",
          {
              "code": 160,
              "tabWidth": 4
          }
      ],
      "no-console": "warn",
      "guard-for-in": "warn",
      "default-case": "warn",
      "no-prototype-builtins": "warn",

      // lowering these to warnings for now
      // we should fix these and tighten to warns
      "eqeqeq": [
          "warn",
          "always",
          {
              "null": "ignore"
          }
      ]
  }
}
